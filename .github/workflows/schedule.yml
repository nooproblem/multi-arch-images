name: Get latest release versions

on:
  push:
    paths:
      - ".github/workflows/schedule.yml"
    branches:
      - master
  schedule:
    - cron: "0 10 * * *"

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          token: ${{ secrets.PAT }}

      - name: Fetch botkube release version
        run: |
          curl -sL https://api.github.com/repos/infracloudio/botkube/tags | \
          jq -r ".[0] .name" > build/botkube/.version

      - name: Fetch cloudflared release version
        run: |
          curl -sL https://api.github.com/repos/cloudflare/cloudflared/tags | \
          jq -r ".[0] .name" > build/cloudflared/.version

      - name: Fetch cluster-autoscaler release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes/autoscaler/releases/latest | \
          jq -r ".tag_name" > build/cluster-autoscaler/.version

      - name: Fetch csi-external-attacher release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes-csi/external-attacher/releases/latest | \
          jq -r ".tag_name" | cut -c 2- > build/csi-external-attacher/.version

      - name: Fetch csi-external-provisioner release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes-csi/external-provisioner/releases/latest | \
          jq -r ".tag_name" | cut -c 2- > build/csi-external-provisioner/.version

      - name: Fetch csi-external-resizer release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes-csi/external-resizer/releases/latest | \
          jq -r ".tag_name" | cut -c 2- > build/csi-external-resizer/.version

      - name: Fetch csi-node-driver-registrar release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes-csi/node-driver-registrar/releases/latest | \
          jq -r ".tag_name" | cut -c 2- > build/csi-node-driver-registrar/.version

      - name: Fetch csi-external-snapshotter release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes-csi/external-snapshotter/releases/latest | \
          jq -r ".tag_name" | cut -c 2- > build/csi-external-snapshotter/.version

      - name: Fetch descheduler release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes-sigs/descheduler/tags | \
          jq -r ".[0] .name" > build/descheduler/.version

      - name: Fetch dex-k8s-authenticator release version
        run: |
          curl -sL https://api.github.com/repos/mintel/dex-k8s-authenticator/releases/latest | \
          jq -r ".tag_name" > build/dex-k8s-authenticator/.version

      - name: Fetch flux release version
        run: |
          curl -sL https://api.github.com/repos/fluxcd/flux/releases/latest | \
          jq -r ".tag_name" > build/flux/.version

      # This API endpoint will need to change when helm-operator has an official release
      - name: Fetch helm-operator release version
        run: |
          curl -sL https://api.github.com/repos/fluxcd/helm-operator/tags | \
          jq -r '.[0].name' > build/helm-operator/.version

      - name: Fetch helm-operator release version
        run: |
          curl -sL https://api.github.com/repos/cilium/hubble-ui/tags | \
          jq -r '.[0].name' > build/hubble-ui/.version

      - name: Fetch kube-bench release version
        run: |
          curl -sL https://api.github.com/repos/aquasecurity/kube-bench/releases/latest | \
          jq -r ".tag_name" > build/kube-bench/.version

      - name: Fetch kubeyaml release version
        run: |
          curl -sL https://api.github.com/repos/squaremo/kubeyaml/releases/latest | \
          jq -r ".tag_name" > build/kubeyaml/.version

      - name: Fetch kured release version
        run: |
          curl -sL https://api.github.com/repos/weaveworks/kured/releases/latest | \
          jq -r ".tag_name" > build/kured/.version

      # kustomize hosts different artifacts in one repo. releases and tags are named $COMPONENT/$VERSION
      # so in order to get the newest kustomize release, retrieve a full page of 100 releases, and pick the
      # first (newest) release having the prefix 'kustomize/' in its tag name. so this breaks as soon as
      # they release 100 other items without releasing kustomize at least once.
      - name: Fetch kustomize release version
        run: |
          KUSTOMIZE_VERSION=$(
            curl -sL "https://api.github.com/repos/kubernetes-sigs/kustomize/releases?per_page=100" | \
            jq -r '[ .[].tag_name | select(test("kustomize/.*")) ] | first // empty'
          )

          if [[ -z "${KUSTOMIZE_VERSION}" ]]; then
            echo "Could not determine Kustomize version."
          else
            echo "${KUSTOMIZE_VERSION}" > build/kustomize/.version
          fi

      - name: Fetch node-feature-discovery release version
        run: |
          curl -sL https://api.github.com/repos/kubernetes-sigs/node-feature-discovery/releases/latest | \
          jq -r ".tag_name" > build/node-feature-discovery/.version

      - name: Fetch prometheus-operator-config-reloader release version
        run: |
          curl -sL https://api.github.com/repos/coreos/prometheus-operator/releases/latest | \
          jq -r ".tag_name" > build/prometheus-operator-config-reloader/.version

      - name: Fetch sops release version
        run: |
          curl -sL https://api.github.com/repos/mozilla/sops/releases/latest | \
          jq -r ".tag_name" > build/sops/.version

      - name: Fetch thanos release version
        run: |
          curl -sL https://api.github.com/repos/thanos-io/thanos/releases/latest | \
          jq -r ".tag_name" > build/thanos/.version

      - name: Fetch traefik-forward-auth release version
        run: |
          curl -sL https://api.github.com/repos/thomseddon/traefik-forward-auth/releases/latest | \
          jq -r ".tag_name" > build/traefik-forward-auth/.version

      - name: Fetch Velero AWS plugin release version
        run: |
          curl -sL https://api.github.com/repos/vmware-tanzu/velero-plugin-for-aws/releases/latest | \
          jq -r ".tag_name" > build/velero-aws-plugin/.version

      - name: Fetch Velero CSI plugin release version
        run: |
          curl -sL https://api.github.com/repos/vmware-tanzu/velero-plugin-for-csi/releases/latest | \
          jq -r ".tag_name" > build/velero-csi-plugin/.version

      - name: Fetch Velero GCP plugin release version
        run: |
          curl -sL https://api.github.com/repos/vmware-tanzu/velero-plugin-for-gcp/releases/latest | \
          jq -r ".tag_name" > build/velero-gcp-plugin/.version

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)

      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Michael Fornaro'
          git config --global user.email '20387402+xUnholy@users.noreply.github.com'
          git commit -sam "Adding new release version" || exit 0

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
